#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <28 29>;
            layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &mt LS(LA(LC(LEFT_GUI))) Q  &kp W         &kp E         &kp R  &kp T                                  &kp Y        &kp U  &kp I      &kp O      &kp P
  &kp A                       &kp S         &kp D         &kp F  &kp G                                  &kp H        &kp J  &lt 1 K    &kp L      &kp ENTER
  &mt LEFT_SHIFT Z            &kp X         &kp C         &kp V  &kp B                                  &kp N        &kp M  &mkp LCLK  &mkp RCLK  &mt RIGHT_SHIFT FSLH
  &kp LCTRL                   &kp LEFT_ALT  &kp LEFT_GUI  &mo 1  &lt 2 LANG2  &lt 3 SPACE  &lt 4 SPACE  &lt 1 LANG1                               &kp RCTRL
            >;
        };

        layer_1 {
            bindings = <
  &kp ESCAPE  &trans  &trans  &trans  &trans                  &trans    &trans    &trans     &trans      &kp BACKSPACE
  &kp TAB     &trans  &trans  &trans  &trans                  &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT   &kp MINUS
  &trans      &trans  &trans  &trans  &trans                  &trans    &trans    &kp COMMA  &kp PERIOD  &trans
  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans                                     &trans
            >;
        };

        layer_2 {
            bindings = <
  &kp GRAVE  &kp LS(GRAVE)  &trans  &trans  &trans                  &trans  &kp LS(N9)    &kp LS(N0)    &kp MINUS  &kp EQUAL
  &trans     &trans         &trans  &trans  &trans                  &trans  &kp LBKT      &kp RBKT      &kp SEMI   &kp APOS
  &trans     &trans         &trans  &trans  &trans                  &trans  &kp LS(LBKT)  &kp LS(RBKT)  &kp COMMA  &kp DOT
  &trans     &trans         &trans  &trans  &trans  &trans  &trans  &trans                                         &kp BSLH
            >;
        };

        layer_3 {
            bindings = <
  &kp N1      &kp N2      &kp N3      &kp N4      &kp N5                      &kp N6      &kp N7      &kp N8      &kp N9      &kp N0
  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)                  &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)
  &trans      &trans      &trans      &trans      &trans                      &trans      &trans      &trans      &trans      &trans
  &trans      &trans      &trans      &trans      &trans      &trans  &trans  &trans                                          &trans
            >;
        };

        layer_4 {
            bindings = <
  &kp C_VOLUME_UP    &kp F7  &kp F8  &kp F9          &kp F12                         &trans             &trans        &kp LC(MINUS)  &kp LS(LC(MINUS))  &kp LC(LG(UP))
  &kp C_VOLUME_DOWN  &kp F4  &kp F5  &kp F6          &kp F11                         &kp LA(LG(EQUAL))  &kp LC(LEFT)  &kp LC(RIGHT)  &kp LC(UP)         &none
  &trans             &kp F1  &kp F2  &kp F3          &kp F10                         &kp LA(LG(MINUS))  &kp LG(LBKT)  &kp LG(RBKT)   &kp LA(LG(N8))     &trans
  &trans             &trans  &trans  &kp LS(LG(N2))  &kp LS(LG(N4))  &mo 5   &trans  &mo 5                                                              &trans
            >;
        };

        layer_5 {
            bindings = <
  &trans  &trans  &trans  &trans  &trans                  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
  &trans  &trans  &trans  &trans  &trans                  &trans        &trans        &trans        &trans        &trans
  &trans  &trans  &trans  &trans  &trans                  &trans        &trans        &trans        &trans        &bt BT_CLR
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
